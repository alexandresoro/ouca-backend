name: Build, Test & Deploy

on:
  push:
    branches:
      - "*"

# concurrency:
#   group: ${{ github.ref }}
#   cancel-in-progress: true

jobs:
  validate:
    #     environment:
    #       name: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && 'production' || 'preview' }}

    runs-on: docker

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: https://github.com/oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2
        with:
          bun-version-file: ".bun-version"

      - shell: bash
        run: bun install

      - uses: ./.forgejo/actions/validate

  publish-backend-image:
    needs: [validate]

    runs-on: docker

    container:
      image: node:20-bookworm@sha256:09b38290270d132b895814d9b54602635dbe146ed3ee65b04619922fe4ef6415

    outputs:
      image-label: ${{ steps.docker-metadata.outputs.version }}
      image-digest: ${{ steps.push-image.outputs.digest }}

    steps:
      - run: apt update && apt install -y podman

      - name: Login to registry
        run: podman login ${{ secrets.HARBOR_REGISTRY_URL }} -u '${{ secrets.HARBOR_USER }}' -p '${{ secrets.HARBOR_PASSWORD }}' --verbose

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Bun version
        id: setup-bun-version
        run: |
          echo "bun-version=$(cat .bun-version)" >> $GITHUB_OUTPUT

      - uses: https://github.com/docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        id: docker-metadata
        with:
          images: |
            ${{ secrets.HARBOR_REGISTRY_URL }}/library/ouca-backend
          tags: |
            type=ref,event=branch,enable=${{ github.ref != format('refs/heads/{0}', github.event.repository.default_branch) }},suffix=-{{sha}}
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}},priority=50
          flavor: |
            latest=false

      - uses: https://github.com/redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        id: build-image
        with:
          layers: false
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          build-args: |
            BUN_IMAGE_VERSION=${{ steps.setup-bun-version.outputs.bun-version }}
            GIT_SHA=${{ github.sha }}
            REGISTRY_URL=${{ secrets.HARBOR_REGISTRY_URL }}/docker.io
          containerfiles: |
            ./Dockerfile

      - uses: https://github.com/redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        id: push-image
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}

  trigger-dispatch-release:
    # environment:
    #   name: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && 'production' || 'preview' }}

    needs: [publish-backend-image]
    # concurrency: deploy-backend-${{ github.ref }}

    runs-on: docker

    steps:
      - name: Dispatch backend image update to forgejo
        run: >
          curl -v --fail
          -H 'accept: application/json'
          -H 'Authorization: token ${{ secrets.FORGEJO_TOKEN }}'
          -H 'Content-Type: application/json'
          --data '{"inputs": {"label": "${{ needs.publish-backend-image.outputs.image-label }}", "targetEnvs": "${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && 'prod,dev' || 'dev' }}" }, "ref": "main"}'
          https://${{ secrets.FORGEJO_DOMAIN }}/api/v1/repos/${{ secrets.FORJEGO_K8S_REPO }}/actions/workflows/${{ vars.FORGEJO_K8S_REPO_WORKFLOW }}/dispatches
